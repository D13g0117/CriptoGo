<!--
<H3>Agente Robot. Traeme cerveza.</H3>
<font face="Arial, Helvetica, sans-serif">
Developped by:<br>
Diego Garcia Garin<br>
Computer Science Dept<br>
Univ. Carlos III de Madrid (Spain)<br>
2020
</font>
-->
<agent xmlns="http://jadex.sourceforge.net/jadex"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex 
	                    http://jadex.sourceforge.net/jadex-0.96.xsd"
	name="robot"
	package="src.robot">

	<imports>
		<import>robot.beliefs.BeersPerHuman</import>
		<import>robot.plans.*</import>
		<import>jadex.runtime.*</import>
		<import>jadex.planlib.*</import>
		<import>jadex.util.*</import>
		<import>jadex.adapter.fipa.*</import>
		<import>java.util.logging.*</import>
		<import>java.util.*</import>
	</imports>
	
	<capabilities>
		<capability name="dfcap" file="jadex.planlib.DF"/>
	</capabilities>

	<beliefs>
		<belief name="haycervezas" class="boolean"/>
		<belief name="sesihaycervezas" class="boolean"/>
		<belief name="cervezaspedidas" class="boolean"/>
		<belief name="maxcervezas" class="int"/>
		<belief name="human" class="AgentIdentifier"/>
		<belief name="lapsedtime" class="int"/>
		<belief name="enoughtime" class="int"/>
		<belief name="currenttime" class="int" updaterate="750">
			<fact> (int)(System.currentTimeMillis()/1000) </fact>
		</belief>				
		<beliefset name="cervezasbebidas" class="BeersPerHuman"/>
	</beliefs>

	<goals>
		<achievegoalref name="df_search">
			<concrete ref="dfcap.df_search"/>
		</achievegoalref>
		<achievegoalref name="df_register">
			<concrete ref="dfcap.df_register"/>
		</achievegoalref>
		
		<performgoal name="pregunta_existencias"  retry="true" retrydelay="3000" exclude="never" >
			<contextcondition>
				(($beliefbase.cervezaspedidas) &amp;&amp; (!$beliefbase.sesihaycervezas) )
				  ||
				(($beliefbase.sesihaycervezas) &amp;&amp; (!$beliefbase.haycervezas) &amp;&amp;
				(($beliefbase.lapsedtime + $beliefbase.enoughtime) &lt; $beliefbase.currenttime ) ) 
			</contextcondition></performgoal>

	</goals>
		
	<plans>

	<plan name="conseguir_cerveza">
		<body class="ConseguirCervezaPlan"/>
		<trigger><messageevent ref="request_bebercerveza" />
	</trigger></plan>
	<plan name="preguntarexistencias_plan">
		<body class="PreguntarExistenciasPlan" />
		<trigger>	<goal ref="pregunta_existencias"/>
	</trigger></plan>
	<plan name="llevarcerveza_plan">
			<body class="LlevarCervezaPlan" />
			<trigger>
				<messageevent ref="inform_haycerveza" />
			</trigger>
		</plan>

	</plans>
	<events>
		<messageevent name="request_bebercerveza" direction="receive" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.REQUEST</value>
			</parameter>
		</messageevent>

		<messageevent name="inform_haycerveza" direction="receive" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
		</messageevent>
			
		<messageevent name="agreebeber" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.AGREE</value>
			</parameter>
			<parameter name="language" class="String" direction="fixed">
				<value>SFipa.NUGGETS_XML</value>
			</parameter>
		</messageevent>
		<messageevent name="refusebeber" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.REFUSE</value>
			</parameter>
			<parameter name="language" class="String" direction="fixed">
				<value>SFipa.NUGGETS_XML</value>
			</parameter>
		</messageevent>
		<messageevent name="informentregada" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
			<parameter name="language" class="String" direction="fixed">
				<value>SFipa.NUGGETS_XML</value>
			</parameter>
		</messageevent>
		<messageevent name="failureentregada" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.FAILURE</value>
			</parameter>
			<parameter name="language" class="String" direction="fixed">
				<value>SFipa.NUGGETS_XML</value>
			</parameter>
		</messageevent>
		<messageevent name="querycervezas" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.QUERY_IF</value>
			</parameter>
			<parameter name="language" class="String" direction="fixed">
				<value>SFipa.NUGGETS_XML</value>
			</parameter>
		</messageevent>

			
	</events>
	
	<configurations>
		<configuration name="default">
		<beliefs>
			<initialbelief ref="sesihaycervezas">
				<fact>false</fact></initialbelief>
			<initialbelief ref="cervezaspedidas">
				<fact>false</fact></initialbelief>
			<initialbelief ref="maxcervezas">
				<fact>2</fact></initialbelief>
			<initialbelief ref="enoughtime">
				<fact>1</fact></initialbelief>
		</beliefs>
		<goals>
			<initialgoal ref="df_register">
				<parameter ref="description"> <value> 
					SFipa.createAgentDescription(null,SFipa.createServiceDescription("robot","beer", null))</value></parameter>
			</initialgoal>
			<initialgoal ref="pregunta_existencias">
			</initialgoal>
		</goals>
		</configuration>
	</configurations>
	
</agent>

